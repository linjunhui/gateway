package com.example.demov2;


import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;

import com.zxing.activity.CaptureActivity;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

public class MainActivity extends Activity implements OnRefreshListener {
	
	public String gateID;
	static public String gateIp = "192.168.1.189";
	SwipeRefreshLayout deviceSw;
	ListView deviceList; 
	
	static List<Device> devicelist = new ArrayList<Device>() ;
	
	Device device1;
	
	private Handler mHandler = new Handler() {
        public void handleMessage(android.os.Message msg)  
        {  
            switch (msg.what)  
            {  
            case 1:  
            	System.out.println("准备更新list");
            	deviceList.setAdapter(new DeviceListAdapter(getBaseContext(), devicelist));
                break;  
  
            }  
        }; 
	};
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		deviceSw = (SwipeRefreshLayout) findViewById(R.id.device_sw);
		deviceList = (ListView) findViewById(R.id.device_list);
		
		deviceSw.setOnRefreshListener(this);
		
		//========模拟====================
		device1 = new Device();
		
		
		device1.ip = SmartProtocol.IPtoInaddr("192.168.3.144");//0x9003a8c0,其中 c0 为192 ,a8 为 168, 03 为 3 , 90 为 144
		
		System.out.println("IP转in_addr测试:" + Integer.toHexString(device1.ip));
		device1.setName("电扇".getBytes());
		
		device1.attrs[0].setAttrName("开关".getBytes());
		device1.attrs[0].dataproperty = 0x07;
		
		
		//============测试设备对象转byte数组=============
		byte[] bytes = device1.convertBytes();
		
		System.out.println("property:" + bytes[65]);
		//======设置listView的Adapter
		deviceList.setAdapter(new DeviceListAdapter(getBaseContext(), devicelist));
		
		
		deviceList.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				// TODO Auto-generated method stub
				System.out.println("选中position:" + position);
				TextView text = (TextView)view.findViewById(R.id.dntv);
				String str = (String) text.getText();
				System.out.println("选中的ssid:" + str);
				//跳转到下device界面
				
				Intent intent = new Intent();
				//Bundle bundle = new Bundle();
			
				//bundle.putSerializable("device", pos);
				
				//intent.putExtras(bundle);
				intent.putExtra("position", position);
				intent.setClass(getBaseContext(), DeviceActivity.class);
				
				startActivity(intent);
				

				
			}
			
		});
	}
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	
	
	//================扫码获得网关的IP=======
	//扫描网关的ID,在元件清单中要添加扫描界面的Activity
	public void scanID(View v) {
		Intent intent = new Intent(MainActivity.this, CaptureActivity.class);
		
		startActivityForResult(intent, 0);
	}
	
	//扫描二维码获得结果后开始处理
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		// TODO Auto-generated method stub
		super.onActivityResult(requestCode, resultCode, data);

		if(resultCode == RESULT_OK) {
			
			gateID = data.getExtras().getString("result");
			System.out.println("ID:" + gateID);
			//connectServer conn = new connectServer();
			//gateIp = conn.connectserver(gateID);
			gateIp = ConnectServer.connectserver(gateID);

			System.out.println("返回IP:" + gateIp);
			
			Thread t = new Thread() {
				public void run() {				
					try {
						System.out.println("返回IP:");
						Socket socket = new Socket(gateIp, 6547);
					} catch (UnknownHostException e) {
						// TODO Auto-generated catch block
						Toast.makeText(getBaseContext(), "网关不在线", Toast.LENGTH_LONG);
						
						//e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						//e.printStackTrace();
					}
				}
			};
			
			t.start();
			
			
			//得到gate的IP后开始连接gate
//			homeProtocol hp = new homeProtocol();
//			int ip = 0;
//			ByteBuffer bf = null;
//			short msgtype = 0x0001;
//			ByteBuffer pdu = hp.assemData(msgtype, ip, bf);
//			hp.SendPDU(pdu, gateIp);
//			
//			homeProtocol hp = new homeProtocol(mHandler, devicelist);
//			int ip = 0xc0a80390;
//			short msgtype = 0x0001;
//			ByteBuffer pdu = hp.assemData(msgtype, ip, null);
//			hp.SendPDU(pdu, gateIp);
		}
	}
	
	//=============跳转到添加设备界面============
	public void addDevice(View v) {
		startActivity(new Intent(this, AddDeviceActivity.class));
	}
	
	//SwipeRefreshLayout.OnRefreshListener 接口中的方法   下拉时做什么
	@Override
	public void onRefresh() {
		// TODO Auto-generated method stub
		System.out.println("下拉了！！！！！");
		 devicelist.clear();
		//停止刷新

		//下拉时 向网关发消息请求设备列表
		SmartProtocol.sendMsg((short) 0x0003, gateIp, null);
		try {
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		Message swMsg = new Message();
		swMsg.what = 1;
		
		mHandler.sendMessage(swMsg);
		
		deviceSw.setRefreshing(false);
		//网关的IP，消息内容 0x0003 请求设备列表
		//APP消息类型：1.请求设备列表  	2.控制设备
		//CCC.sendMsg(gateIP, 0x0003, NULL)

		
		/* 控制设备
		 * 拿到这个设备对象 或者说  信息，修改其中的属性
		 * CCC.sendMsg(gateIP, 0x0004, device)
		 * 
		 */
	}
	
	
}
