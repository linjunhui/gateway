package com.example.demov2;

import java.io.Serializable;
import java.nio.ByteBuffer;

public class Device implements Serializable {
	//4 字节
	int ip;
	//22 字节 最大7个汉字
	byte[] name = new byte[22];
	//9 字节
	byte[] id = new byte[9];
	//1 字节
	byte locked;
	//13 字节
	byte[] gateID = new byte[13];
	//1 字节
	byte online;
	// 22 * 10 = 220 字节 ，当然这个数值并没有220 字节，数值存的是引用
	Attr[] attrs = new Attr[10];
	//填充用
	byte[] next = new byte[4];
	
	
	ByteBuffer buffer=ByteBuffer.allocate(300);
	byte[] bytes = null;
	
	public Device() {
		//构造方法， 在创建Device对象时创建10个属性对象
		for(int i = 0; i < 10; i++) {
			this.attrs[i] = new Attr();
		}
	}
	
	public void setName(byte[] b) {
		System.arraycopy(b, 0, this.name, 0, b.length);
	}
	
	
	public byte[] convertBytes() {
		
		buffer.clear();
		//两个字节
		short msgtype = 0;
		
		buffer=ByteBuffer.allocate(300);
		
		buffer.putShort(msgtype);//2
		System.out.println("buffer位置：" + buffer.position());
		buffer.putInt(this.ip);//4
		System.out.println("buffer位置：" + buffer.position());
		buffer.put(this.name);//22
		System.out.println("buffer位置：" + buffer.position());
		buffer.put(this.id);//9
		System.out.println("buffer位置：" + buffer.position());
		buffer.put(this.locked);//1
		System.out.println("buffer位置：" + buffer.position());
		buffer.put(this.gateID);//13
		System.out.println("buffer位置：" + buffer.position());
		buffer.put(this.online);//1

		//如果变量 10个 属性的话有可能有的属性不存在
//		for(int i = 0; i < attrs.length; i++) {
//			byte[] bs = attrs[i].attrConvertBytes();
//			buffer.put(bs);
//		}
//		
		System.out.println("buffer位置：" + buffer.position());
		byte[] bs = attrs[0].attrConvertBytes();
		buffer.put(bs);
		System.out.println("put int :" + Integer.toHexString(buffer.get(0)) + buffer.get(1));
		
		bytes = buffer.array();
		return bytes;
		
	}

}

// 22 字节
 class Attr {
	//13字节
	byte[] attrName = new byte[13];
	//1 字节
	byte dataproperty;
	//4 字节
	int data;
	//4 字节
	int times;
	
	ByteBuffer buffer=ByteBuffer.allocate(22);
	byte[] bytes = null;
	public byte[] attrConvertBytes() {		
		
		buffer.put(attrName);
		buffer.put(dataproperty);
		buffer.putInt(data);
		buffer.putInt(times);
		
		bytes = buffer.array();
		return bytes;
		
	}
}
 
 